name: Python

on:
  workflow_dispatch:

jobs:
  build_python:
    strategy:
      fail-fast: false
      matrix:
        python:
          - 3.6.13
          - 3.7.10
          - 3.8.10
          - 3.9.5

    name: 'Build and install Python ${{ matrix.python }}'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - id: ubuntu-name
        run: |
          echo "::set-output name=distro::$(cat /etc/os-release | grep UBUNTU_CODENAME | cut -d'=' -f2)"
          echo "::set-output name=arch::$(uname -p)"
      
      - name: Check if build is needed
        id: build-required
        run: |
          if [ -n "$(cat python | grep ${{ steps.ubuntu-name.outputs.distro }} | grep ${{ matrix.python }})" ]; then
            echo 'NO BUILD REQUIRED'
            echo "::set-output name=value::false"
          else
            echo 'BUILD REQUIRED'
            echo "::set-output name=value::true"
          fi

      - name: Update system
        if: steps.build-required.outputs.value
        run: sudo apt update && sudo apt upgrade -y && sudo apt dist-upgrade -y

      - name: Install pyenv dependencies
        run: >
          sudo apt-get install make build-essential libssl-dev zlib1g-dev
          libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm
          libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev
          libffi-dev liblzma-dev

      - name: Install pyenv
        run: |
          git clone https://github.com/pyenv/pyenv.git ~/.pyenv
          cd ~/.pyenv && src/configure && make -C src

          echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bash_profile
          echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bash_profile
          echo 'eval "$(pyenv init --path)"' >> ~/.bash_profile

      - name: Install Python ${{ matrix.python }}
        run: pyenv install ${{ matrix.python }}
        shell: bash -l {0}

      - name: Package Python ${{ matrix.python }}
        run: |
          cd ~/.pyenv/versions
          tar cvf ~/python-${{ matrix.python }}-${{ steps.ubuntu-name.outputs.arch }}.tar.gz \
          ${{ matrix.python }}

      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com

      - name: Add Python ${{ matrix.python }} to repository file
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${{ steps.ubuntu-name.outputs.distro }} ${{ matrix.python }}" >> python
          cat python | sort -h | tee python
          git add python
          git commit --message "Add Python ${{ matrix.python }} for Ubuntu ${{ steps.ubuntu-name.outputs.distro }}"
          git pull --rebase && git push

      - name: Create release
        env:
          tag: ${{ steps.ubuntu-name.outputs.distro }}-python-${{ matrix.python }}
          title: ${{ steps.ubuntu-name.outputs.distro }}-python-${{ matrix.python }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create "${tag}" --title "${title}" ~/*.tar.gz
